
[{"content":" 进入数据库 # postgres=\u0026gt; \\c mario_database SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off) You are now connected to database \u0026#34;mario_database\u0026#34; as user \u0026#34;freecodecamp\u0026#34;. mario_database=\u0026gt; DROP DATABASE second_database 列出已有数据库list # \\l mario_database=\u0026gt; \\l mario_database=\u0026gt; List of databases +----------------+--------------+----------+---------+---------+-----------------------+ | Name | Owner | Encoding | Collate | Ctype | Access privileges | +----------------+--------------+----------+---------+---------+-----------------------+ | mario_database | freecodecamp | UTF8 | C.UTF-8 | C.UTF-8 | | | postgres | postgres | UTF8 | C.UTF-8 | C.UTF-8 | | | template0 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | =c/postgres +| | | | | | | postgres=CTc/postgres | | template1 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | =c/postgres +| | | | | | | postgres=CTc/postgres | +----------------+--------------+----------+---------+---------+-----------------------+ (4 rows) 展现数据库中的表 # \\d Did not find any relations. 添加一个表 # CREATE TABLE characters(); return CREATE TABLE if success 在表中添加行·列 # ALTER TABLE characters ADD COLUMN character_id SERIAL; (tablename) (column name) (type) ALTER TABLE table_name ADD COLUMN column_name DATATYPE CONSTRAINT; (指定格式) 比如：NOT NULL 登录数据库 # psql --username=freecodecamp --dbname=postgres 创建数据库·表·列 # CREATE DATABASE database_name; CREATE TABLE table_name(); ALTER TABLE table_name ADD COLUMN column_name DATATYPE; 移除一列（remove） # ALTER TABLE table_name DROP COLUMN column_name; 删除一行 # DELETE FROM students WHERE id = 2; 删除表 # DROP TABLE table_name; 给表中的量添加值 # INSERT INTO second_table(id, username) VALUES(1, \u0026#39;Samus\u0026#39;); INSERT INTO characters(name, homeland, favorite_color) VALUES(\u0026#39;Mario\u0026#39;, \u0026#39;Mushroom Kingdom\u0026#39;, \u0026#39;Red\u0026#39;), (\u0026#39;Luigi\u0026#39;, \u0026#39;Mushroom Kingdom\u0026#39;, \u0026#39;Green\u0026#39;), (\u0026#39;Peach\u0026#39;, \u0026#39;Mushroom Kingdom\u0026#39;, \u0026#39;Pink\u0026#39;); 修改某值 # UPDATE students SET age = 23 WHERE id = 2; 查看表中的值 # SELECT columns FROM table_name; 选中所有：* 以id排序 # SELECT columns FROM table_name ORDER BY column_name; SELECT * FROM characters ORDER BY character_id; ","date":"2025-01-29","externalUrl":null,"permalink":"/docs/postgresql/","section":"使用文档","summary":"Something about SQL","title":"PostgreSQL","type":"docs"},{"content":"","date":"2025-01-29","externalUrl":null,"permalink":"/tags/rubbish/","section":"Tags","summary":"","title":"Rubbish","type":"tags"},{"content":"\r第一行1346第二行2345第三行123456第四行123456第五行2345第六行1346\n输入\r输出\r| a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t |\r| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\r| h | r | g | k | y | t | i | q | l | s | d | j | n | a | p | m | b | v | o | f |\r| u | v | w | x | y | z | | | | | | | | | | | | | | |\r| z | c | x | e | u | w | | | | | | | | | | | | | | |\ri want to drink\rl xhaf fp kvlad 初始化捕虫网的起始位置 # net_position = [0.0, 0.0, 0.0] # 捕虫网初始位置 net_speed_ratio = 2 # 捕虫网与萤火虫的速度比 2:1 catch_distance = 0.1 # 捕虫网抓住萤火虫的标准距离\n计算两个点之间的欧几里得距离 # def calculate_distance(pos1, pos2): return math.sqrt((pos1[0] - pos2[0]) ** 2 + (pos1[1] - pos2[1]) ** 2 + (pos1[2] - pos2[2]) ** 2)\n根据当前捕虫网与萤火虫之间的距离和位置，计算萤火虫的下一步位置 # def calculate_firefly_position(net_position, distance): # 假设萤火虫和捕虫网的相对位置是一条直线，我们可以通过距离来估算 # 为了简化模型，假设萤火虫沿着与捕虫网的连线方向移动 direction = [net_position[0] + distance, net_position[1], net_position[2]] return direction\n计算捕虫网的下一步目标位置 # def next_net_position(firefly_position, net_position, net_speed_ratio): # 计算萤火虫和捕虫网的当前距离 distance = calculate_distance(firefly_position, net_position)\nif distance \u0026lt;= catch_distance:\rprint(\u0026quot;捕虫网已抓住萤火虫！\u0026quot;)\rreturn None\r# 捕虫网朝着萤火虫的方向移动\rdirection = [firefly_position[i] - net_position[i] for i in range(3)] # 捕虫网到萤火虫的方向向量\rmagnitude = calculate_distance([0, 0, 0], direction) # 方向向量的大小\r# 归一化方向向量\rdirection = [d / magnitude for d in direction]\r# 捕虫网速度是萤火虫的两倍\rnet_move = [d * net_speed_ratio for d in direction] # 捕虫网的移动方向\rnext_position = [net_position[i] + net_move[i] for i in range(3)] # 捕虫网的下一步位置\rreturn next_position\r绘制三维图形 # def plot_3d(net_position, firefly_position): fig = plt.figure() ax = fig.add_subplot(111, projection=\u0026lsquo;3d\u0026rsquo;)\n# 绘制捕虫网与萤火虫的位置\rax.scatter(net_position[0], net_position[1], net_position[2], color='blue', label='捕虫网', s=100)\rax.scatter(firefly_position[0], firefly_position[1], firefly_position[2], color='yellow', label='萤火虫', s=100)\r# 绘制坐标轴\rax.set_xlabel('X')\rax.set_ylabel('Y')\rax.set_zlabel('Z')\r# 设置图例\rax.legend()\r# 显示图形\rplt.show()\r模拟捕虫网每一步的移动 # def run_simulation(): global net_position firefly_position = [2.0, 4.0, 0.0] # 假设萤火虫的初始位置\nwhile True:\rtry:\r# 让用户输入当前萤火虫与捕虫网的距离\rprint(\u0026quot;请输入捕虫网与萤火虫之间的距离（大于0，退出请输入负数）：\u0026quot;)\rdistance = float(input())\rif distance \u0026lt; 0:\rprint(\u0026quot;退出模拟。\u0026quot;)\rbreak\rif distance \u0026lt;= 0:\rprint(\u0026quot;距离必须大于0！\u0026quot;)\rcontinue\r# 计算萤火虫的下一步位置\rfirefly_position = calculate_firefly_position(net_position, distance)\r# 获取捕虫网的下一步位置\rnext_position = next_net_position(firefly_position, net_position, net_speed_ratio)\rif next_position is None:\rbreak\r# 输出捕虫网的下一步目标位置\rprint(f\u0026quot;捕虫网的下一步目标位置: {next_position}\u0026quot;)\r# 更新捕虫网位置\rnet_position = next_position\r# 绘制捕虫网和萤火虫的三维位置\rplot_3d(net_position, firefly_position)\rexcept ValueError:\rprint(\u0026quot;请输入一个有效的数字！\u0026quot;)\r启动模拟 # run_simulation()\n*是亮\r\u0026#34;Pyaga dqx V tvxs iya eaqxvxb wt iya uygqka \u0026#39;Fqy bzlgd rvpxa tpe sznmo pcyv fqy jhwu kpi\u0026#39;?\u0026#34;\rhello\rYaffw!\rtsw：fox\r入 Fox pybhd mngzj tgw vylic gaxn fox rsue kgq.\r出 Tpe murqk naiws fix cujlg ihea tpe vozy dib.\rThe quick brown fox jumps over the lazy dog.\rfax hygvd qbszm tsw lypoj srxb fax inue ksc.\rFox pybhd mngzj tgw vylic gaxn fox rsue kgq.\rUln tcvae gxsph osd bcwif sknx uln yjmq rsz.\rThe quick brown fox jumps over the lazy dog.\rpjd efiya vktlx ctn sfuzg tbdk pjd ohqr wtm.\rprint\rzkixp\r```nzvfpm\rdhe dhapdh_ohsscgh(hmapdhd_ohsscgh):\rdhapdhd_ohsscgh = \u0026#34;\u0026#34;\repu afcu im hmapdhd_ohsscgh:\rie afcu.iscknfc():\rdhapdhd_ohsscgh += afu((pud(afcu) - 32) % 26 + 97)\rhksh:\rdhapdhd_ohsscgh += afcu\ruhvrum dhapdhd_ohsscgh\rhmapdhd_ohsscgh = \u0026#34;The quick brown fox jumps over the lazy dog.\u0026#34;\rdhapdhd_ohsscgh = dhapdh_ohsscgh(hmapdhd_ohsscgh)\rnuimv(dhapdhd_ohsscgh) ","date":"2025-01-29","externalUrl":null,"permalink":"/docs/miao/","section":"使用文档","summary":"The draft~","title":"Rubbish","type":"docs"},{"content":"","date":"2025-01-29","externalUrl":null,"permalink":"/tags/sql/","section":"Tags","summary":"","title":"SQL","type":"tags"},{"content":"","date":"2025-01-29","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" 欢迎来到 泡饭25 的网站！ ","date":"2025-01-29","externalUrl":null,"permalink":"/","section":"这里是 泡饭25 的网站! 👻","summary":"","title":"这里是 泡饭25 的网站! 👻","type":"page"},{"content":"\rmarkdown的使用说明 # 一、标题 # 语法：# (一级标题) ## (二级标题) ### (三级标题) \u0026hellip;\u0026hellip;\n代码：\n# 这是一级标题 ## 这是二级标题 效果:\n这是一级标题 # 这是二级标题 # 快捷键:\nCtrl+数字1~6可以快速将选中的文本调成对应级别的标题 Ctrl+0可以快速将选中的文本调成普通文本 Ctrl+加号/减号对标题级别进行加减 二、段落 # 1、换行 # 代码:\n这是一个段落 这是一个段落 效果:\n这是一个段落 这是一个段落\n2、分割线 # 语法: \u0026mdash;或者***+回车\n代码:\n---或者*** 效果:\n三、文字显示 # 1、字体 # 语法:\n粗体: 用一对双星号包裹 删除线: 用一对双飘号包裹 下划线: 用一对u标签包裹 斜体: 用一对单星号包裹 高亮: 用一对双等号包裹 代码:\n**这是粗体** ~~这是删除线~~ \u0026lt;u\u0026gt;这是下划线\u0026lt;/u\u0026gt; *这是斜体* ==这是高亮== 效果: 这是粗体 这是删除线 这是下划线 这是斜体 ==这是高亮==\n快捷键:\n加粗: Ctrl+B 删除线: Shift+Alt+5 下划线: Ctrl+U 斜体: Ctrl+I 2、上下标 # 代码:\nx^2^ H~2~O 效果: x^2^ H2O\n四、列表 # 1、无序列表 # 代码:\n*/-/+ +空格 效果: 1.只有同一级别:\n苹果 香蕉 橘子 2.子集类:\n一级分类 二级分类 三级分类 快捷键: Ctrl+Shift+]\n2、有序列表 # 代码:\n数字+.+空格 效果:\n第一个标题\n第二个标题\n第三个标题\n子内容1 子内容2 第四个标题\n快捷键: Ctrl+Shift+[\n3、任务列表 # 代码:\n- [ ] 吃早餐 - [x] 背单词 效果:\n吃早餐 背单词 五、区块显示 # 代码:\n\u0026gt;+回车 效果:\n这是最外层区块\n这是内层区块\n这是最内层区块\n六、代码显示 # 1、行内代码 # 代码:\n`int a=0;`（说明：`位于Esc下面） 效果: int a=0;\n快捷键: Ctrl+Shift+`\n2、代码块 # 代码:\n```js/java/c#/text 内容 ``` 快捷键: Ctrl+Shift+K\n七、链接 # 代码:\nwww.baidu.com [百度一下](https://www.baidu.com) [百度一下](https://www.baidu.com \u0026#34;https://www.baidu.com\u0026#34;) 效果: www.baidu.com 百度一下 百度一下\n快捷键: Ctrl+K\n八、脚注 # 说明: 对文本进行解释说明。\n代码:\n[^文本] [^文本]:解释说明 效果: 这是一个技术1\n九、图片插入 # 代码:\n![不显示的文字](图片路径 \u0026#34;图片标题\u0026#34;) 效果: ![This is a picture](C:\\Users\\asus\\Pictures\\Saved Pictures\\Snipaste_2020-09-03_13-19-11.png \u0026ldquo;漫步图\u0026rdquo;)\n(注：效果路径为C:\\Users\\asus\\Pictures\\Saved Pictures\\Snipaste_2020-09-03_13-19-11.png。在其他电脑上可能不显示。)\n快捷键: Ctrl+Shift+I\n十、表格 # 代码:\n| 1 | 2 | 3 | | :--- | :--: | ---: | | 4 | 5 | 6 | | 7 | 8 | 9 | | 10 | 11 | 12 | 效果:\n1 2 3 4 5 6 7 8 9 10 11 12 快捷键: Ctrl+T\n十一、流程图 # 1、横向流程图 # 代码:\n```mermaid graph LR A[方形]==\u0026gt;B(圆角) B==\u0026gt;C{条件a} C--\u0026gt;|a=1|D[结果1] C--\u0026gt;|a=2|E[结果2] F[横向流程图] ``` 效果:\ngraph LR\rA[方形]==\u0026gt;B(圆角)\rB==\u0026gt;C{条件a}\rC--\u0026gt;|a=1|D[结果1]\rC--\u0026gt;|a=2|E[结果2]\rF[横向流程图] 2、竖向流程图 # 代码:\n```mermaid graph TD A[方形]==\u0026gt;B(圆角) B==\u0026gt;C{条件a} C--\u0026gt;|a=1|D[结果1] C--\u0026gt;|a=2|E[结果2] F[竖向流程图] ``` 效果:\ngraph TD\rA[方形]==\u0026gt;B(圆角)\rB==\u0026gt;C{条件a}\rC--\u0026gt;|a=1|D[结果1]\rC--\u0026gt;|a=2|E[结果2]\rF[竖向流程图] 十二、表情符号 # 代码:\n:happy:、:cry:、:man: 效果: :happy:、 \u0026#x1f622;、 \u0026#x1f468;\n十三、数学公式的输入 # 1、公式的插入 # ①行中公式 # 代码:\n\\\\(公式\\\\) 效果: \\(公式\\)\n②独立公式 # 代码:\n$$ 公式 $$ 效果: $$ 公式 $$\n2、上下标 # 代码:\n$$x^{y^z}=(1+e^x)^{-2xy^w}$$ $$\\sideset{^1_2}{^3_4}{\\underset{6}\\bigotimes}$$ 效果: $$x^{y^z}=(1+e^x)^{-2xy^w}$$ $$\\sideset{^1_2}{^3_4}{\\underset{6}\\bigotimes}$$\n3、括号和分隔符 # 代码:\n$$\\langle\\quad\\rangle\\quad\\lceil\\quad\\rceil\\quad\\lfloor\\quad\\rfloor\\quad\\lbrace\\quad\\rbrace\\quad\\lVert\\quad\\rVert$$ $$f(x,y,z)=3y^2z\\left(3+\\dfrac{7x+5}{1+y^2}\\right)$$ $$\\left.\\dfrac{\\mathrm{d}u}{\\mathrm{d}x}\\right|_{x=0}$$ 效果: \\(\\langle\\quad\\rangle\\quad\\lceil\\quad\\rceil\\quad\\lfloor\\quad\\rfloor\\quad\\lbrace\\quad\\rbrace\\quad\\lVert\\quad\\rVert\\) \\(f(x,y,z)=3y^2z\\left(3+\\dfrac{7x+5}{1+y^2}\\right)\\) \\(\\left.\\dfrac{\\mathrm{d}u}{\\mathrm{d}x}\\right|_{x=0}\\)\n4、分数 # 代码:\n$$\\frac{a}{b}\\quad\\dfrac{a}{b}\\quad {a\\over b}$$ 效果: \\(\\frac{a}{b}\\quad\\dfrac{a}{b}\\quad {a\\over b}\\)\n5、开方 # 代码:\n$$\\sqrt[根指数,省略时为2]{被开方数}$$ 效果: $$\\sqrt{2}\\quad\\sqrt[3]{2}$$\n6、省略号 # 代码:\n$$\\cdots\\quad\\ldots\\quad\\vdots\\quad\\ddots$$ 效果: $$\\cdots\\quad\\ldots\\quad\\vdots\\quad\\ddots$$\n7、矢量和均值 # 代码:\n$$\\overrightarrow{E(\\vec{r})}\\quad\\overleftarrow{E(\\vec{r})}\\quad\\overleftrightarrow{E(\\vec{r})}\\quad\\underrightarrow{E(\\vec{r})}\\quad\\underleftarrow{E(\\vec{r})}\\quad\\underleftrightarrow{E(\\vec{r})}\\quad\\overline{v}=\\bar{v}\\quad\\underline{v}$$ 效果: \\(\\overrightarrow{E(\\vec{r})}\\quad\\overleftarrow{E(\\vec{r})}\\quad\\overleftrightarrow{E(\\vec{r})}\\quad\\underrightarrow{E(\\vec{r})}\\quad\\underleftarrow{E(\\vec{r})}\\quad\\underleftrightarrow{E(\\vec{r})}\\quad\\overline{v}=\\bar{v}\\quad\\underline{v}\\)\n8、积分 # 代码:\n$$ \\iint\\limits_D\\left(\\dfrac{\\partial Q}{\\partial x}-\\dfrac{\\partial P}{\\partial y}\\right){\\rm d}x{\\rm d}y=\\oint\\limits_LP{\\rm d}x+Q{\\rm d}y $$ 效果: $$ \\iint\\limits_D\\left(\\dfrac{\\partial Q}{\\partial x}-\\dfrac{\\partial P}{\\partial y}\\right){\\rm d}x{\\rm d}y=\\oint\\limits_LP{\\rm d}x+Q{\\rm d}y $$\n9、极限 # 代码:\n$$\\lim\\limits_{n\\to\\infin}(1+\\dfrac{1}{n})^n=e$$ 效果: $$\\lim\\limits_{n\\to\\infin}(1+\\dfrac{1}{n})^n=e$$\n10、累加、累乘及交集、并集 # $$\\sum\\limits_{i=1}^n\\dfrac{1}{n^2}\\quad and\\quad\\prod\\limits_{i=1}^n\\dfrac{1}{n^2}\\quad and\\quad\\bigcup\\limits_{i=1}^n\\dfrac{1}{n^2}\\quad and\\quad\\bigcap\\limits_{i=1}^n\\dfrac{1}{n^2}$$ 效果: $$\\sum\\limits_{i=1}^n\\dfrac{1}{n^2}\\quad and\\quad\\prod\\limits_{i=1}^n\\dfrac{1}{n^2}\\quad and\\quad\\bigcup\\limits_{i=1}^n\\dfrac{1}{n^2}\\quad and\\quad\\bigcap\\limits_{i=1}^n\\dfrac{1}{n^2}$$\n11、希腊字母 # 语法 字母 语法 字母 语法 字母 \\Alpha(\\alpha) $$\\Alpha(\\alpha)$$ \\Beta(\\beta) $$\\Beta(\\beta)$$ \\Gamma(\\gamma) $$\\Gamma(\\gamma)$$ \\Epsilon(\\epsilon)\\varepsilon $$\\Epsilon(\\epsilon)\\varepsilon$$ \\Zeta(\\zeta) $$\\Zeta(\\zeta)$$ \\Eta(\\eta) $$\\Eta(\\eta)$$ \\Iota(\\iota) $$\\Iota(\\iota)$$ \\Kappa(\\kappa)\\varkappa $$\\Kappa(\\kappa)\\varkappa$$ \\Lambda(\\lambda) $$\\Lambda(\\lambda)$$ \\Nu(\\nu) $$\\Nu(\\nu)$$ \\Xi(\\xi) $$\\Xi(\\xi)$$ \\Omicron(\\omicron) $$\\Omicron(\\omicron)$$ \\Rho(\\rho)\\varrho $$\\Rho(\\rho)\\varrho$$ \\Sigma(\\sigma)\\varsigma $$\\Sigma(\\sigma)\\varsigma$$ \\Tau(\\tau) $$\\Tau(\\tau)$$ \\Phi(\\phi)\\varphi $$\\Phi(\\phi)\\varphi$$ \\Chi(\\chi) $$\\Chi(\\chi)$$ \\Psi(\\psi) $$\\Psi(\\psi)$$ \\Delta(\\delta) $$\\Delta(\\delta)$$ \\Theta(\\theta)\\vartheta $$\\Theta(\\theta)\\vartheta$$ \\Mu(\\mu) $$\\Mu(\\mu)$$ \\Pi(\\pi)\\varpi $$\\Pi(\\pi)\\varpi$$ \\Omega(\\omega) $$\\Omega(\\omega)$$ \\upsilon $$\\upsilon$$ \\ell $$\\ell$$ \\eth $$\\eth$$ \\hbar $$\\hbar$$ \\hslash $$\\hslash$$ \\mho $$\\mho$$ \\partial $$\\partial$$ 12、特殊字符 # ①说明 # 可以在字符前使用\\large或\\small以显示更大或更小的字符。$${\\LARGE A}{\\Large A}{\\large A}A{\\small A}$$\n②关系运算符 # 输入 显示 输入 显示 输入 显示 \\pm(\\mp) $$\\pm(\\mp)$$ \\times $$\\times$$ \\div $$\\div$$ \\nmid $$\\nmid$$ \\cdot $$\\cdot$$ \\mid $$\\mid$$ \\bigodot $$\\bigodot$$ \\bigotimes $$\\bigotimes$$ \\bigoplus $$\\bigoplus$$ \\ge $$\\ge$$ \\le $$\\le$$ \\ll $$\\ll$$ \\geqslant $$\\geqslant$$ \\leqslant $$\\leqslant$$ \\neq $$\\neq$$ \\approx $$\\approx$$ \\xlongequal{文本} $$\\xlongequal{文本}$$ \\triangleq $$\\triangleq$$ \\sim $$\\sim$$ \\doteq $$\\doteq$$ \\equiv $$\\equiv$$ \\cong $$\\cong$$ \\propto $$\\propto$$ \\parallel(\\|) $$\\parallel$$ \\prec $$\\prec$$ \\pmod{2} $$\\pmod{2}$$ \\bmod $$\\bmod{2}$$ ③集合运算符 # 输入 显示 输入 显示 输入 显示 \\emptyset $$\\emptyset$$ \\varnothing $$\\varnothing$$ \\subset $$\\subset$$ \\subseteq $$\\subseteq$$ \\subsetneq $$\\subsetneq$$ \\supset $$\\supset$$ \\supseteq $$\\supseteq$$ \\supsetneq $$\\supsetneq$$ \\bigcap $$\\bigcap$$ \\bigcup $$\\bigcup$$ \\setminus $$\\setminus$$ \\bigvee $$\\bigvee$$ \\bigwedge $$\\bigwedge$$ \\in $$\\in$$ \\notin $$\\notin$$ \\ni $$\\ni$$ ④三角运算符 # 输入 显示 输入 显示 输入 显示 \\circ $$\\circ$$ \\bot $$\\bot$$ \\angle $$\\angle$$ \\degree $$\\degree$$ ⑤微积分运算符 # 输入 显示 输入 显示 输入 显示 \\int $$\\int$$ \\iint $$\\iint$$ \\iiint $$\\iiint$$ \\oint $$\\oint$$ \\oiint $$\\oiint$$ \\prime(‘) $$\\prime$$ \\lim $$\\lim$$ \\infin $$\\infin$$ \\nabla $$\\nabla$$ \\grad $$\\grad$$ ⑥逻辑运算符 # 输入 显示 输入 显示 输入 显示 \\because $$\\because$$ \\therefore $$\\therefore$$ \\forall $$\\forall$$ \\exist $$\\exist$$ \\not\u0026gt; $$\\not\u0026gt;$$ \\not\u0026lt; $$\\not\u0026lt;$$ \\land $$\\land$$ \\lor $$\\lor$$ \\lnot $$\\lnot$$ \\top $$\\top$$ \\vdash $$\\vdash$$ \\vDash $$\\vDash$$ ⑦带帽符号 # 输入 显示 输入 显示 \\hat{xy} $$\\hat{xy}$$ \\widehat{xyz} $$\\widehat{xyz}$$ \\tilde{xy} $$\\tilde{xy}$$ \\widetilde{xyz} $$\\widetilde{xyz}$$ \\check{x} $$\\check{x}$$ \\breve{y} $$\\breve{y}$$ \\grave{x} $$\\grave{x}$$ \\acute{y} $$\\acute{y}$$ \\dot{x} $$\\dot{x}$$ \\ddot{x} $$\\ddot{x}$$ \\overparen{xy} $$\\overparen{xy}$$ ⑧选取符号 # 输入 显示 输入 显示 \\fbox{a+b+c+d} $$\\fbox{a+b+c+d}$$ \\overbrace{xx\\cdots x}^{10个x} $$\\overbrace{xx\\cdots x}^{10个x}$$ \\underbrace{xx\\cdots x}_{10个x} $$\\underbrace{xx\\cdots x}_{10个x}$$ ⑨箭头符号 # 输入 显示 输入 显示 输入 显示 \\leftarrow $$\\leftarrow$$ \\rightarrow $$\\rightarrow$$ \\leftrightarrow $$\\leftrightarrow$$ \\longleftarrow $$\\longleftarrow$$ \\longrightarrow $$\\longrightarrow$$ \\longleftrightarrow $$\\longleftrightarrow$$ \\Leftarrow $$\\Leftarrow$$ \\Rightarrow $$\\Rightarrow$$ \\Leftrightarrow $$\\Leftrightarrow$$ \\Longleftarrow $$\\Longleftarrow$$ \\Longrightarrow $$\\Longrightarrow$$ \\Longleftrightarrow $$\\Longleftrightarrow$$ \\uparrow $$\\uparrow$$ \\downarrow $$\\downarrow$$ \\updownarrow $$\\updownarrow$$ \\Uparrow $$\\Uparrow$$ \\Downarrow $$\\Downarrow$$ \\Updownarrow $$\\Updownarrow$$ \\to $$\\to$$ \\swarrow $$\\swarrow$$ \\nearrow $$\\nearrow$$ \\gets $$\\gets$$ \\searrow $$\\searrow$$ \\nwarrow $$\\nwarrow$$ \\mapsto $$\\mapsto$$ \\rightrightarrows $$\\rightrightarrows$$ ⑩空格 # 输入 效果 输入 效果 输入 效果 \\! $$ ! $$ 默认 $$ , $$ , $$ ;(\\ ) $$ 13、字体 # 代码:\n$${\\字体{需要转换的字符}}$$ 输入 说明 显示 输入 说明 显示 \\rm 罗马体 $${\\rm{Sample}}$$ \\cal 花体 $${\\cal{Sample}}$$ \\it 意大利体 $${\\it{Sample}}$$ \\Bbb 黑板粗体 $${\\Bbb{Sample}}$$ \\bf 粗体 $${\\bf{Sample}}$$ \\mit 数学斜体 $${\\mit{Sample}}$$ \\sf 等线体 $${\\sf{Sample}}$$ \\scr 手写体 $${\\scr{Sample}}$$ \\tt 打字机体 $${\\tt{Sample}}$$ \\frak 旧德式字体 $${\\frak{Sample}}$$ 14、大括号和行标 # 说明: 使用\\left和\\right来创建自动匹配高度的()、[]、{}、.。在每个公式末尾使用\\tag{行标}来实现行标。\n代码:\n$$ f\\left( \\left[ \\dfrac{1+\\{x,y\\}}{\\left(\\dfrac{x}{y}+\\dfrac{y}{x}\\right)(u+1)}+a \\right] ^{\\dfrac{3}{2}} \\right) \\tag{行标} $$ 效果: $$ f\\left(\\left[\\dfrac{1+{x,y}}{\\left(\\dfrac{x}{y}+\\dfrac{y}{x}\\right)(u+1)}+a\\right]^{\\dfrac{3}{2}}\\right)\\tag{行标} $$\n说明:如果你想将行内显示的分隔符也变大,也可以使用\\middle命令\n代码:\n$$ \\left\\langle q\\middle\\|\\dfrac{\\dfrac{x}{y}}{\\dfrac{u}{v}}\\middle|p\\right\\rangle $$ 效果: $$ \\left\\langle q\\middle|\\dfrac{\\dfrac{x}{y}}{\\dfrac{u}{v}}\\middle|p\\right\\rangle $$\n15、其他命令 # ①注释文字 # 代码:\n$$\\text{文字}$$ 效果: $$ f(n)=\\begin{cases}n/2,\u0026amp;\\text{if $$n$$ is even}\\3n+1,\u0026amp;\\text{if $$n$$ is odd}\\end{cases} $$\n③文字颜色 # 适用新旧浏览器 代码: $$\\color{颜色}{文字}$$ 输入 显示 输入 显示 输入 显示 black $$\\color{black}{color}$$ grey $$\\color{grey}{color}$$ silver $$\\color{silver}{color}$$ white $$\\color{white}{color}$$ maroon $$\\color{maroon}{color}$$ red $$\\color{red}{color}$$ yellow $$\\color{yellow}{color}$$ lime $$\\color{lime}{color}$$ olive $$\\color{olive}{color}$$ green $$\\color{green}{color}$$ teal $$\\color{teal}{color}$$ auqa $$\\color{auqa}{color}$$ blue $$\\color{blue}{color}$$ navy $$\\color{navy}{color}$$ purple $$\\color{purple}{color}$$ fuchsia $$\\color{fuchsia}{color}$$ 适用新版浏览器 代码: $$\\color{#rgb}{文字}$$ (注:其中r、g、b可以输入0~9和a~f来分别表示红色、绿色和蓝色的纯度) 输入 输出 输入 输出 输入 输出 输入 输出 #000 $$\\color{#000}{color}$$ #005 $$\\color{#005}{color}$$ #00A $$\\color{#00A}{color}$$ #00F $$\\color{#00F}{color}$$ #500 $$\\color{#500}{color}$$ #505 $$\\color{#505}{color}$$ #50A $$\\color{#50A}{color}$$ #50F $$\\color{#50F}{color}$$ #A00 $$\\color{#A00}{color}$$ #A05 $$\\color{#A05}{color}$$ #A0A $$\\color{#A0A}{color}$$ #A0F $$\\color{#A0F}{color}$$ #F00 $$\\color{#F00}{color}$$ #F05 $$\\color{#F05}{color}$$ #F0A $$\\color{#F0A}{color}$$ #F0F $$\\color{#F0F}{color}$$ #050 $$\\color{#050}{color}$$ #055 $$\\color{#055}{color}$$ #05A $$\\color{#05A}{color}$$ #05F $$\\color{#05F}{color}$$ #550 $$\\color{#550}{color}$$ #555 $$\\color{#555}{color}$$ #55A $$\\color{#55A}{color}$$ #55F $$\\color{#55F}{color}$$ #A50 $$\\color{#A50}{color}$$ #A55 $$\\color{#A55}{color}$$ #A5A $$\\color{#A5A}{color}$$ #A5F $$\\color{#A5F}{color}$$ #F50 $$\\color{#F50}{color}$$ #F55 $$\\color{#F55}{color}$$ #F5A $$\\color{#F5A}{color}$$ #F5F $$\\color{#F5F}{color}$$ #0A0 $$\\color{#0A0}{color}$$ #0A5 $$\\color{#0A5}{color}$$ #0AA $$\\color{#0AA}{color}$$ #0AF $$\\color{#0AF}{color}$$ #5A0 $$\\color{#5A0}{color}$$ #5A5 $$\\color{#5A5}{color}$$ #5AA $$\\color{#5AA}{color}$$ #5AF $$\\color{#5AF}{color}$$ #AA0 $$\\color{#AA0}{color}$$ #AA5 $$\\color{#AA5}{color}$$ #AAA $$\\color{#AAA}{color}$$ #AAF $$\\color{#AAF}{color}$$ #FA0 $$\\color{#FA0}{color}$$ #FA5 $$\\color{#FA5}{color}$$ #FAA $$\\color{#FAA}{color}$$ #FAF $$\\color{#FAF}{color}$$ #0F0 $$\\color{#0F0}{color}$$ #0F5 $$\\color{#0F5}{color}$$ #0FA $$\\color{#0FA}{color}$$ #0FF $$\\color{#0FF}{color}$$ #5F0 $$\\color{#5F0}{color}$$ #5F5 $$\\color{#5F5}{color}$$ #5FA $$\\color{#5FA}{color}$$ #5FF $$\\color{#5FF}{color}$$ #AF0 $$\\color{#AF0}{color}$$ #AF5 $$\\color{#AF5}{color}$$ #AFA $$\\color{#AFA}{color}$$ #AFF $$\\color{#AFF}{color}$$ #FF0 $$\\color{#FF0}{color}$$ #FF5 $$\\color{#FF5}{color}$$ #FFA $$\\color{#FFA}{color}$$ #FFF $$\\color{#FFF}{color}$$ ③删除线 # 说明: 使用\\require{cancle}声明，再使用\\cancle{字符}、\\bcancle{字符}、\\xcancle{字符}、\\cancleto{字符}{字符}来实现各种片段删除线效果。\n代码:\n$$ \\require{cancel}\\begin{array}{r1} \\verb|y+\\cancel{x}|\u0026amp;y+\\cancel{x}\\\\ \\verb|y+\\cancel{y+x}|\u0026amp;y+\\cancel{y+x}\\\\ \\verb|y+\\bcancel{x}|\u0026amp;y+\\bcancel{x}\\\\ \\verb|y+\\xcancel{x}|\u0026amp;y+\\xcancel{x}\\\\ \\verb|y+\\cancelto{0}{x}|\u0026amp;y+\\cancelto{0}{x}\\\\ \\verb+\\frac{1\\cancel9}{\\cancel95}=\\frac15+\u0026amp;\\frac{1\\cancel9}{\\cancel95}=\\frac15\\\\ \\end{array} $$ 效果: $$ \\require{cancel}\\begin{array}{r1} \\verb|y+\\cancel{x}|\u0026amp;y+\\cancel{x}\\ \\verb|y+\\cancel{y+x}|\u0026amp;y+\\cancel{y+x}\\ \\verb|y+\\bcancel{x}|\u0026amp;y+\\bcancel{x}\\ \\verb|y+\\xcancel{x}|\u0026amp;y+\\xcancel{x}\\ \\verb|y+\\cancelto{0}{x}|\u0026amp;y+\\cancelto{0}{x}\\ \\verb+\\frac{1\\cancel9}{\\cancel95}=\\frac15+\u0026amp;\\frac{1\\cancel9}{\\cancel95}=\\frac15\\ \\end{array} $$\n说明: 使用\\require{enclose}来允许整段删除线的显示，再使用\\enclose{删除线效果}{字符}来使用各种整段删除线效果。其中，删除线效果有horizontalstrike、verticalstrike、updiagonalstrike和downdiagonalstrike,可以叠加使用。\n代码:\n$$ \\require{enclose}\\begin{array}{r1} \\verb|\\enclose{horizontalstrike}{x+y}|\u0026amp;\\enclose{horizontalstrike}{x+y}\\\\ \\verb|\\enclose{verticalstrike}{\\frac xy}|\u0026amp;\\enclose{verticalstrike}{\\frac xy}\\\\ \\verb|\\enclose{updiagonalstrike}{x+y}|\u0026amp;\\enclose{updiagonalstrike}{x+y}\\\\ \\verb|\\enclose{downdiagonalstrike}{x+y}|\u0026amp;\\enclose{downdiagonalstrike}{x+y}\\\\ \\verb|\\enclose{horizontalstrike,updiagonalstrike}{x+y}|\u0026amp;\\enclose{horizontalstrike,updiagonalstrike}{x+y}\\\\ \\end{array} $$ 效果: $$ \\require{enclose}\\begin{array}{r1} \\verb|\\enclose{horizontalstrike}{x+y}|\u0026amp;\\enclose{horizontalstrike}{x+y}\\ \\verb|\\enclose{verticalstrike}{\\frac xy}|\u0026amp;\\enclose{verticalstrike}{\\frac xy}\\ \\verb|\\enclose{updiagonalstrike}{x+y}|\u0026amp;\\enclose{updiagonalstrike}{x+y}\\ \\verb|\\enclose{downdiagonalstrike}{x+y}|\u0026amp;\\enclose{downdiagonalstrike}{x+y}\\ \\verb|\\enclose{horizontalstrike,updiagonalstrike}{x+y}|\u0026amp;\\enclose{horizontalstrike,updiagonalstrike}{x+y}\\ \\end{array} $$\n16、矩阵 # ①无框矩阵 # 代码:\n$$ \\begin{matrix} 1\u0026amp;x\u0026amp;x^2\\\\ 1\u0026amp;y\u0026amp;y^2\\\\ 1\u0026amp;z\u0026amp;z^2\\\\ \\end{matrix} $$ 效果: $$ \\begin{matrix} 1\u0026amp;x\u0026amp;x^2\\ 1\u0026amp;y\u0026amp;y^2\\ 1\u0026amp;z\u0026amp;z^2\\ \\end{matrix} $$\n②边框矩阵 # 说明: 在开头将matrix替换为pmatrix、bmatrix、Bmatrix、vmatrix、Vmatrix。\nmatrix pmatrix bmatrix Bmatrix vmatrix Vmatrix $$\\begin{matrix}1\u0026amp;2\\3\u0026amp;4\\end{matrix}$$ $$\\begin{pmatrix}1\u0026amp;2\\3\u0026amp;4\\end{pmatrix}$$ $$\\begin{bmatrix}1\u0026amp;2\\3\u0026amp;4\\end{bmatrix}$$ $$\\begin{Bmatrix}1\u0026amp;2\\3\u0026amp;4\\end{Bmatrix}$$ $$\\begin{vmatrix}1\u0026amp;2\\3\u0026amp;4\\end{vmatrix}$$ $$\\begin{Vmatrix}1\u0026amp;2\\3\u0026amp;4\\end{Vmatrix}$$ ③带分割线的矩阵 # 说明: 可以使用cc|c来在一个三列矩阵中插入分割线。\n代码:\n$$ \\left[ \\begin{array}{cc|c} 1\u0026amp;2\u0026amp;3\\\\ 4\u0026amp;5\u0026amp;6 \\end{array} \\right] $$ 效果: $$ \\left[ \\begin{array}{cc|c} 1\u0026amp;2\u0026amp;3\\ 4\u0026amp;5\u0026amp;6 \\end{array} \\right] $$\n④行中矩阵 # 代码:\n$$\\bigl(\\begin{smallmatrix}a\u0026amp;b\\\\c\u0026amp;d\\end{smallmatrix}\\bigr)$$ 效果: $$\\bigl(\\begin{smallmatrix}a\u0026amp;b\\c\u0026amp;d\\end{smallmatrix}\\bigr)$$\n17、方程式序列 # 说明: 可以使用\\begin{align}...\\end{align}来创建一列整齐且默认右对齐的方程式序列。请注意{align}是自动编号的，使用{align*}来声明停止自动编号，也可以使用\\notag来取消特定行的自动编号。在需要的时候，你可以使用\\begin{equation}...\\end{equation}来强制表达式自动编号。\n代码: $$ \\begin{align} f(x)\u0026amp;=1+1\\ \u0026amp;=2 \\end{align} $$\n$$ \\begin{equation} \\left[ \\begin{array}{cc|c} 1\u0026amp;2\u0026amp;3\\ 4\u0026amp;5\u0026amp;6 \\end{array} \\right] \\end{equation} $$\n$$ \\begin{align} \\sqrt{37}=\\sqrt{\\dfrac{73^2-1}{12^2}}\\\\ \u0026amp;=\\sqrt{\\dfrac{73^2}{12^2}\\cdot\\dfrac{73^2-1}{73^2}}\\\\ \u0026amp;=\\sqrt{\\dfrac{73^2}{12^2}}\\sqrt{\\dfrac{73^2-1}{73^2}}\\notag\\\\ \u0026amp;=\\dfrac{73}{12}\\sqrt{1-\\dfrac{1}{73^2}}\\\\ \\approx\\dfrac{73}{12}\\left(1-\\dfrac{1}{2\\cdot73^2}\\right)\\label{A} \\end{align} $$ *** $$ \\begin{align*} v+m\u0026amp;=0\u0026amp;\\text{Given}\\tag1\\\\ -w\u0026amp;=-w+0\u0026amp;\\text{additive identity}\\tag2\\\\ -w+0\u0026amp;=-w+(v+w)\u0026amp;\\text{equations $$(1)$$ and $$(2)$$} \\end{align*} $$ 效果: $$ \\begin{align} \\sqrt{37}\u0026amp;=\\sqrt{\\dfrac{73^2-1}{12^2}}\\ \u0026amp;=\\sqrt{\\dfrac{73^2}{12^2}\\cdot\\dfrac{73^2-1}{73^2}}\\ \u0026amp;=\\sqrt{\\dfrac{73^2}{12^2}}\\sqrt{\\dfrac{73^2-1}{73^2}}\\notag\\ \u0026amp;=\\dfrac{73}{12}\\sqrt{1-\\dfrac{1}{73^2}}\\ \u0026amp;\\approx\\dfrac{73}{12}\\left(1-\\dfrac{1}{2\\cdot73^2}\\right)\\label{A} \\end{align} $$\n$$ \\begin{align*} v+m\u0026amp;=0\u0026amp;\\text{Given}\\tag1\\ -w\u0026amp;=-w+0\u0026amp;\\text{additive identity}\\tag2\\ -w+0\u0026amp;=-w+(v+w)\u0026amp;\\text{equations $$(1)$$ and $$(2)$$} \\end{align*} $$\n你可以使用\\label{标签}来创建一个标签，就如上面的方程式序列中展示的那样，之后使用\\eqref{标签}引用你想引用的公式，效果为：$$\\eqref{A}$$。如果不想要括号，可以输入\\ref{标签}，效果为：公式 $$\\ref{A}$$。\n公式1和2的不同列之间存在间隔，如果你不想要，可以通过将align替换为alignat{1}来去除列间隔。\n18、条件表达式 # 说明: 使用\\begin{cases}来创造一组默认左对齐的条件表达式,在每一行插入\u0026amp;来指定需要对齐的内容,并在每一行结尾处使用\\\\,以\\end{cases}结尾。\n代码:\n$$ f(n)= \\begin{cases} n/2,\u0026amp;\\text{if $$n$$ is even}\\\\ 3n+1,\u0026amp;\\text{if $$n$$ is odd} \\end{cases} $$ 效果: $$ f(n)= \\begin{cases} n/2,\u0026amp;\\text{if $$n$$ is even}\\ 3n+1,\u0026amp;\\text{if $$n$$ is odd} \\end{cases} $$\n19、配置行高 # 说明: 可以使用\\\\[2ex]语句替代该行末尾的\\\\来让编译器适配 , 其中[ex]指一个\u0026quot;X-Height\u0026quot; , 即x字母高度 , 也可以使用[3ex]或[4ex]等。\n代码:\n$$ f(n)= \\begin{cases} \\dfrac n2,\u0026amp;\\text{if $$n$$ is even}\\\\[2ex] 3n+1,\u0026amp;\\text{if $$n$$ is odd} \\end{cases}\\tag{适配[2ex]} $$ *** $$ f(n)= \\begin{cases} \\dfrac n2,\u0026amp;\\text{if $$n$$ is even}\\\\ 3n+1,\u0026amp;\\text{if $$n$$ is odd} \\end{cases}\\tag{不适配[2ex]} $$ 效果: $$ f(n)= \\begin{cases} \\dfrac n2,\u0026amp;\\text{if $$n$$ is even}\\[2ex] 3n+1,\u0026amp;\\text{if $$n$$ is odd} \\end{cases}\\tag{适配[2ex]} $$\n$$ f(n)= \\begin{cases} \\dfrac n2,\u0026amp;\\text{if $$n$$ is even}\\ 3n+1,\u0026amp;\\text{if $$n$$ is odd} \\end{cases}\\tag{不适配[2ex]} $$\n20、数组与表格 # 说明: 数组与表格均以\\begin{array}开头,并在其后定义列数及每一列的文本对齐方式,c l r分别代表居中、左对齐及右对齐。若要插入垂直分割线，在定义中插入|，若要插入水平分割线，在定义中加入\\hline。\n代码:\n$$ \\begin{array}{c|lcr} n\u0026amp;\\text{左对齐}\u0026amp;\\text{居中对齐}\u0026amp;\\text{右对齐}\\\\ \\hline 1\u0026amp;0.24\u0026amp;1\u0026amp;125\\\\ 2\u0026amp;-1\u0026amp;189\u0026amp;-8\\\\ 3\u0026amp;-20\u0026amp;2000\u0026amp;1+10i \\end{array} $$ 效果: $$ \\begin{array}{c|lcr} n\u0026amp;\\text{左对齐}\u0026amp;\\text{居中对齐}\u0026amp;\\text{右对齐}\\ \\hline 1\u0026amp;0.24\u0026amp;1\u0026amp;125\\ 2\u0026amp;-1\u0026amp;189\u0026amp;-8\\ 3\u0026amp;-20\u0026amp;2000\u0026amp;1+10i \\end{array} $$\n21、嵌套表格或数组 # 代码:\n$$ % outer vertical array of arrays 外层垂直表格 \\begin{array}{c} % inner horizontal array of arrays 内层水平表格 \\begin{array}{cc} % inner array of minimum values 内层\u0026#34;最小值\u0026#34;数组 \\begin{array}{c|cccc} \\text{min}\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\\\ \\hline 0\u0026amp;0\u0026amp;0\u0026amp;0\u0026amp;0\\\\ 1\u0026amp;0\u0026amp;1\u0026amp;1\u0026amp;1\\\\ 2\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;2\\\\ 3\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\\\ \\end{array} \u0026amp; % inner array of maximum values 内层\u0026#34;最大值\u0026#34;数组 \\begin{array}{c|cccc} \\text{max}\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\\\ \\hline 0\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\\\ 1\u0026amp;1\u0026amp;1\u0026amp;2\u0026amp;3\\\\ 2\u0026amp;2\u0026amp;2\u0026amp;2\u0026amp;3\\\\ 3\u0026amp;3\u0026amp;3\u0026amp;3\u0026amp;3 \\end{array} \\end{array} % 内层第一行表格组结束 \\\\ % inner array of delta values 内层第二行Delta值数组 \\begin{array}{c|cccc} \\Delta\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\\\ \\hline 0\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\\\ 1\u0026amp;1\u0026amp;0\u0026amp;1\u0026amp;2\\\\ 2\u0026amp;2\u0026amp;1\u0026amp;0\u0026amp;1\\\\ 3\u0026amp;3\u0026amp;2\u0026amp;1\u0026amp;0 \\end{array} % 内层第二行表格组结束 \\end{array} $$ 效果: $$ % outer vertical array of arrays 外层垂直表格 \\begin{array}{c} % inner horizontal array of arrays 内层水平表格 \\begin{array}{cc} % inner array of minimum values 内层\u0026quot;最小值\u0026quot;数组 \\begin{array}{c|cccc} \\text{min}\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\ \\hline 0\u0026amp;0\u0026amp;0\u0026amp;0\u0026amp;0\\ 1\u0026amp;0\u0026amp;1\u0026amp;1\u0026amp;1\\ 2\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;2\\ 3\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\ \\end{array} \u0026amp; % inner array of maximum values 内层\u0026quot;最大值\u0026quot;数组 \\begin{array}{c|cccc} \\text{max}\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\ \\hline 0\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\ 1\u0026amp;1\u0026amp;1\u0026amp;2\u0026amp;3\\ 2\u0026amp;2\u0026amp;2\u0026amp;2\u0026amp;3\\ 3\u0026amp;3\u0026amp;3\u0026amp;3\u0026amp;3 \\end{array} \\end{array} % 内层第一行表格组结束 \\ % inner array of delta values 内层第二行Delta值数组 \\begin{array}{c|cccc} \\Delta\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\ \\hline 0\u0026amp;0\u0026amp;1\u0026amp;2\u0026amp;3\\ 1\u0026amp;1\u0026amp;0\u0026amp;1\u0026amp;2\\ 2\u0026amp;2\u0026amp;1\u0026amp;0\u0026amp;1\\ 3\u0026amp;3\u0026amp;2\u0026amp;1\u0026amp;0 \\end{array} % 内层第二行表格组结束 \\end{array} $$\n22、方程组 # 说明: 使用\\begin{array}...\\end{array}和\\left\\{...\\right.来创建一个方程组,或者你也可以使用条件表达式组\\begin{cases}...\\end{cases}来实现相同效果。\n代码:\n$$ \\left\\{ \\begin{array}{l} a_1x+b_1y+c_1z=d_1\\\\ a_2x+b_2y+c_2z=d_2\\\\ a_3x+b_3y+c_1z=d_3 \\end{array} \\right. \\quad\\text{或者}\\quad \\begin{cases} a_1x+b_1y+c_1z=d_1\\\\ a_2x+b_2y+c_2z=d_2\\\\ a_3x+b_3y+c_1z=d_3 \\end{cases} $$ 效果: $$ \\left{ \\begin{array}{l} a_1x+b_1y+c_1z=d_1\\ a_2x+b_2y+c_2z=d_2\\ a_3x+b_3y+c_1z=d_3 \\end{array} \\right. \\quad\\text{或者}\\quad \\begin{cases} a_1x+b_1y+c_1z=d_1\\ a_2x+b_2y+c_2z=d_2\\ a_3x+b_3y+c_1z=d_3 \\end{cases} $$\n23、连分式 # 说明: 就像\\frac一样,使用\\cfrac或\\dfrac来创建一个连分式,不要使用普通的\\frac或\\over来创建,否则看起来会很恶心。\n代码:\n$$ x=a_0+\\cfrac{1^2}{a_1+\\cfrac{2^2}{a_2+\\cfrac{3^2}{a_3+\\cfrac{4^2}{a_4+\\cdots}}}} $$ 效果: $$ x=a_0+\\cfrac{1^2}{a_1+\\cfrac{2^2}{a_2+\\cfrac{3^2}{a_3+\\cfrac{4^2}{a_4+\\cdots}}}} $$\n反例:\nx=a_0+\\frac{1^2}{a_1+\\frac{2^2}{a_2+\\frac{3^2}{a_3+\\frac{4^2}{a_4+\\cdots}}}} 效果: $$ x=a_0+\\frac{1^2}{a_1+\\frac{2^2}{a_2+\\frac{3^2}{a_3+\\frac{4^2}{a_4+\\cdots}}}} $$\n补充: 当然,你可以使用\\frac来表达连分数的紧缩记法。\n代码:\n$$ x=a_0+\\frac{1^2}{a_1+}\\frac{2^2}{a_2+}\\frac{3^2}{a_3+}\\frac{4^2}{a_4+}\\cdots $$ 效果: $$ x=a_0+\\frac{1^2}{a_1+}\\frac{2^2}{a_2+}\\frac{3^2}{a_3+}\\frac{4^2}{a_4+}\\cdots $$\n24、交换图表 # 说明: 使用一行$$\\require{AMScd}$$语句来允许交换图表的显示,并通过在开头使用\\begin{CD},结尾使用\\end{CD}来创建。\n代码:\n$$ \\require{AMScd} \\begin{CD} A@\u0026gt;a\u0026gt;\u0026gt;B\\\\ @VbVV\\# @VcVV\\\\ C @\u0026gt;\u0026gt;d\u0026gt; D \\end{CD} $$ 效果: $$ \\require{AMScd} \\begin{CD} A@\u0026gt;a\u0026raquo;B\\ @V b V V# @VV c V\\ C @\u0026raquo;d\u0026gt; D \\end{CD} $$\n补充: 其中,@\u0026gt;\u0026gt;\u0026gt;代表右箭头、@\u0026lt;\u0026lt;\u0026lt;代表左箭头、@VVV代表下箭头、@AAA代表上箭头、@=代表水平双实线、@|代表竖直双实线、@.代表没有箭头。在@\u0026gt;\u0026gt;\u0026gt;的\u0026gt;\u0026gt;\u0026gt;之间任意插入文字即代表该箭头的注释文字。\n代码:\n$$ \\begin{CD} A@\u0026gt;\u0026gt;\u0026gt;B@\u0026gt;{\\text{very long label}}\u0026gt;\u0026gt;C\\\\ @.@AAA@|\\\\ D@=E@\u0026lt;\u0026lt;\u0026lt;F \\end{CD} $$ 效果: $$ \\begin{CD} A@\u0026raquo;\u0026gt;B@\u0026gt;{\\text{very long label}}\u0026raquo;C\\ @.@AAA@|\\ D@=E@\u0026laquo;\u0026lt;F \\end{CD} $$\n25、其他 # 搜索$$\\LaTeX$$ 十四、支持的HTML元素 # 1、文本居中 # 代码\n\u0026lt;center\u0026gt;内容\u0026lt;/center\u0026gt; 效果\n内容\r2、快捷键显示 # 代码:\n\u0026lt;kbd\u0026gt;内容\u0026lt;/kbd\u0026gt; 效果: 内容\n3、加粗 # 代码:\n\u0026lt;b\u0026gt;加粗\u0026lt;/b\u0026gt; 效果:\n加粗\n4、倾斜 # 代码:\n\u0026lt;i\u0026gt;倾斜\u0026lt;/i\u0026gt; 效果: 倾斜\n5、上下标 # 代码:\n开始\u0026lt;sup\u0026gt;123hi你好\u0026lt;/sup\u0026gt; 开始\u0026lt;sub\u0026gt;321hi你好\u0026lt;/sub\u0026gt; 效果: 开始123hi你好 开始321hi你好\n6、填充的黑色箭头 # 代码：\n\u0026amp;#x27A4; 效果： ➤\n这是一个非常好用的框架。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-08-14","externalUrl":null,"permalink":"/docs/shortcodes/","section":"使用文档","summary":"This is my first post on my site","title":"How to Use Markdown","type":"docs"},{"content":" Alert # options: none # {{}}\r\u0026lt; alert \u0026gt;内容\u0026lt; /alert \u0026gt;\r{{ }} {{ }} **警告！**此操作具有破坏性！ options: \u0026ldquo;twitter\u0026rdquo; # \u0026#34;twitter\u0026#34; Don\u0026rsquo;t forget to follow me on Twitter. options: icon,cardColor,iconColor,textColor # icon=\u0026#34;fire\u0026#34; cardColor=\u0026#34;#e63946\u0026#34; iconColor=\u0026#34;#1d3557\u0026#34; textColor=\u0026#34;#f1faee\u0026#34; This is an error! 引用同级文件（或者下一级但不常用） # {{}}\rarticle\rlink=\u0026#34;/docs/shortcodes/\u0026#34; How to Use Markdown 1674 字\u0026middot;8 分钟\u0026middot; loading \u0026middot; loading MarkDown This is my first post on my site 一个小badge # {{}}\r\u0026lt; badge \u0026gt;\r\u0026lt; /badge \u0026gt; New article!\rButton 它有三个可选变量 href、target 和 rel，可用于指定链接的 URL、目标和关系。 # {{}}\rbutton\rhref=\u0026#34;#button\u0026#34; target=\u0026#34;_self\u0026#34; Call to action\r打开Google链接 # href=\u0026#34;https://www.google.com/\u0026#34; target=\u0026#34;_block\u0026#34; Go to google\r轮播图 指定参数 # 只能显示现有网页文件夹下的图片\ncarousel\rimages=\u0026#34;{img/7.jpg,img/3.jpg,img/4.jpg,img/5.jpg,img/6.jpg} Previous Nextsads 轮播图 自动匹配参数 # images=\u0026#34;img/*\u0026#34; //文件夹或url\raspectRatio=\u0026#34;21-9\u0026#34; //纵横比\rinterval=\u0026#34;2500\u0026#34; //时间间隔 2000代表2秒\r左侧默认carousel images=\u0026#34;img/*\u0026#34; aspectRatio=\u0026#34;21-9\u0026#34; interval=\u0026#34;2500\u0026#34;右侧默认 add 功能 image 必填 用于匹配图像名称的正则表达式或 URL。 aspectRatio 可选 画廊的纵横比。16-9 、21-9 或32-9 。默认设置为16-9 。 interval 可选 自动滚动的时间间隔，以毫秒为单位指定。默认为2000（2 秒）。 轮播图示例 # Previous Nextsads 数据处理 条形图 扇形图 # {{}}\rchart\rtype: \u0026#39;bar\u0026#39;,\rdata: {\rlabels: [\u0026#39;Tomato\u0026#39;, \u0026#39;Blueberry\u0026#39;, \u0026#39;Banana\u0026#39;, \u0026#39;Lime\u0026#39;, \u0026#39;Orange\u0026#39;],\rdatasets: [{\rlabel: \u0026#39;# of votes\u0026#39;,\rdata: [12, 19, 3, 5, 3],\r}]\r}\roffer more to use 初级图片示例 # 高级图片示例 # 示例代码 \u0026lt;chart\u0026gt;\rtype: \u0026#39;bar\u0026#39;,\rdata: {\rlabels: [\u0026#39;January\u0026#39;, \u0026#39;February\u0026#39;, \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39;, \u0026#39;May\u0026#39;, \u0026#39;June\u0026#39;, \u0026#39;July\u0026#39;],\rdatasets: [{\rlabel: \u0026#39;My First Dataset\u0026#39;,\rdata: [65, 59, 80, 81, 56, 55, 40],\rbackgroundColor: [\r\u0026#39;rgba(255, 99, 132, 0.2)\u0026#39;,\r\u0026#39;rgba(255, 159, 64, 0.2)\u0026#39;,\r\u0026#39;rgba(255, 205, 86, 0.2)\u0026#39;,\r\u0026#39;rgba(75, 192, 192, 0.2)\u0026#39;,\r\u0026#39;rgba(54, 162, 235, 0.2)\u0026#39;,\r\u0026#39;rgba(153, 102, 255, 0.2)\u0026#39;,\r\u0026#39;rgba(201, 203, 207, 0.2)\u0026#39;\r],\rborderColor: [\r\u0026#39;rgb(255, 99, 132)\u0026#39;,\r\u0026#39;rgb(255, 159, 64)\u0026#39;,\r\u0026#39;rgb(255, 205, 86)\u0026#39;,\r\u0026#39;rgb(75, 192, 192)\u0026#39;,\r\u0026#39;rgb(54, 162, 235)\u0026#39;,\r\u0026#39;rgb(153, 102, 255)\u0026#39;,\r\u0026#39;rgb(201, 203, 207)\u0026#39;\r],\rborderWidth: 1\r}]\r} type: \u0026#39;line\u0026#39;,\rdata: {\rlabels: [\u0026#39;January\u0026#39;, \u0026#39;February\u0026#39;, \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39;, \u0026#39;May\u0026#39;, \u0026#39;June\u0026#39;, \u0026#39;July\u0026#39;],\rdatasets: [{\rlabel: \u0026#39;My First Dataset\u0026#39;,\rdata: [65, 59, 80, 81, 56, 55, 40],\rtension: 0.2\r}]\r} type: \u0026#39;doughnut\u0026#39;,\rdata: {\rlabels: [\u0026#39;Red\u0026#39;, \u0026#39;Blue\u0026#39;, \u0026#39;Yellow\u0026#39;],\rdatasets: [{\rlabel: \u0026#39;My First Dataset\u0026#39;,\rdata: [300, 50, 100],\rbackgroundColor: [\r\u0026#39;rgba(255, 99, 132, 0.7)\u0026#39;,\r\u0026#39;rgba(54, 162, 235, 0.7)\u0026#39;,\r\u0026#39;rgba(255, 205, 86, 0.7)\u0026#39;\r],\rborderWidth: 0,\rhoverOffset: 4\r}]\r} 从github上便捷引用代码 只需要url # Parameter Description url 必需的 外部托管代码文件的 URL. type 用于语法突出显示的代码类型. startLine 可选 从代码文件中导入的起始行. endLine 可选 从代码文件中导入的结束行. go语言 # 输入代码\ngo语言\rcodeimporter url=\u0026#34;https://raw.githubusercontent.com/nunocoracao/blowfish/main/\rlayouts/shortcodes/mdimporter.html\u0026#34; type=\u0026#34;go\u0026#34; 输出代码 {{ $url := .Get \u0026#34;url\u0026#34;}} {{ with resources.GetRemote (urls.Parse $url) }} {{ .Content | markdownify }} {{ else }} {{ errorf \u0026#34;Mardown Importer Shortcode - Unable to get remote resource\u0026#34; . }} {{ end }} toml语言 # 输入代码\ncodeimporter url=\u0026#34;https://raw.githubusercontent.com/nunocoracao/\rblowfish/main/config/_default/hugo.toml\u0026#34; type=\u0026#34;toml\u0026#34; startLine=\u0026#34;11\u0026#34; endLine=\u0026#34;18\u0026#34; 输出代码 enableRobotsTXT = true summaryLength = 0 buildDrafts = false buildFuture = false enableEmoji = true Codeberg Card # Codeberg存储库的格式为 username/repo\n\u0026lt; codeberg repo=\u0026#34;forgejo/forgejo\u0026#34; \u0026gt; \u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e forgejo/forgejo Beyond coding. We forge. Go 1912 308 figure # 参数 功能 src 必填 图像的本地路径/文件名或 URL。当提供路径和文件名时，主题将尝试使用以下查找顺序来查找图像：首先，作为与页面绑定的页面资源；然后是 assets/ 目录中的文件；最后是，static/目录中的文件。 alt 图像的替代文本描述。 caption Markdown 格式的图像标题，将显示在图像下方。 class 应用于图像的其他 CSS 类。 href 图像应链接到的 URL。 target href URL 的目标属性。 nozoom nozoom=true 会禁用图像缩放功能。与 href 结合使用十分有用。 default 用于恢复默认 Hugo figure 行为的特殊参数。只需提供default=true，然后使用正常的 Hugo 简码语法。 Image caption Photo by Jr Korpa on Unsplash Photo by Jr Korpa on Unsplash Gallery one # Gallery two # github 项目 something wrong # emmm本地实验的时候貌似失灵了，不知道发布之后会怎么样（没学好JavaScript，看不懂，大概感觉是用了github的api吧）\n源码是这样的\n\u0026lt;script\u0026gt;\rfetch(\u0026#34;https://api.github.com/repos/paofan25/paofan25.github.io\u0026#34;, {\rheaders: new Headers({\r\u0026#39;User-agent\u0026#39;: \u0026#39;Mozilla/4.0 Custom User Agent\u0026#39;\r})\r})\r.then(response =\u0026gt; response.json())\r.then(data =\u0026gt; {\rdocument.getElementById(\u0026#39;github-34d7009b09e4a521d67ae02e42d4e76b-full_name\u0026#39;).innerHTML = data.full_name;\rdocument.getElementById(\u0026#39;github-34d7009b09e4a521d67ae02e42d4e76b-description\u0026#39;).innerHTML = data.description;\rdocument.getElementById(\u0026#39;github-34d7009b09e4a521d67ae02e42d4e76b-stargazers\u0026#39;).innerHTML = data.stargazers_count;\rdocument.getElementById(\u0026#39;github-34d7009b09e4a521d67ae02e42d4e76b-forks\u0026#39;).innerHTML = data.forks;\r})\r.catch(error =\u0026gt; console.error(error))\r\u0026lt;/script\u0026gt; 不知道是api过时了还是怎样 paofan25/paofan25.github.io HTML 0 0 gitlab项目 something wrong # 运用你的gitlab projectID GitLab.org / GitLab GitLab is an open source end-to-end software development platform with built-in version control, issue tracking, code review, CI/CD, and more. Self-host GitLab on your own servers, in a container, or on a cloud provider. 5419 10608 一个图标 # 可以自定义图标\n可以通过在项目的 assets/icons/ 目录中提供您自己的图标来添加自定义图标。然后可以使用不带 .svg 扩展名的 SVG 文件名在简码中引用该图标。\n数学公式支持 # 众所周知，latex用的是$$\nkatex是\r(\\\\\r\\\\) \\(f(a,b,c) = (a^2+b^2+c^2)^3\\)\n重点标记 # Super skill 同行重点标记 # Lorem ipsum dolor. Important skill 重点标记中的加粗 # Standalone skill 一些大的字 # When life gives you lemons, make lemonade. 显示两个文章 # 最近的文章 PostgreSQL 267 字\u0026middot;2 分钟\u0026middot; loading \u0026middot; loading SQL Something about SQL Rubbish 草稿 574 字\u0026middot;3 分钟\u0026middot; loading \u0026middot; loading Rubbish The draft~ Samples 从右向左输入的文字 # This is an markdown list. Its per default a LTR direction هذه القائمة باللغة العربية من اليمين الى اليسار 直接输出github下面的readme.md文档 # \u0026mdash;文档内容开始\u0026mdash; Hi there 👋 # 🐳 Principal Product Manager @ Docker 🐡 Creator and maintainer of Blowfish @ Blowfish page 🚀 Personal blog - n9o.xyz 📚 mentoring @ mentorcruise \u0026mdash;文档内容结束\u0026mdash;\n简单地制作流程图 运用mermaid # graph LR;\rA[Lemons]--\u003eB[Lemonade];\rB--\u003eC[Profit]\r一张色卡 # 以下是一份时间轴 可以自定义 图标 和 内容 # header badge test subheader Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Nam ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Nam sollicitudin est sed dui interdum rhoncus. Another Awesome Header date - present Awesome Subheader With html code\rCoffee\rTea\rMilk\rShortcodes AWESOME With other shortcodes\rAnother Awesome Header nunocoracao/blowfish Personal Website \u0026amp; Blog Theme for Hugo HTML 1677 458 充满高级感的自动输出效果 # 便捷的运用youtube视频 # ","date":"2023-08-14","externalUrl":null,"permalink":"/docs/extracode/","section":"使用文档","summary":"How to Use Web extra Markdown","title":"How to Use Web extra Markdown","type":"docs"},{"content":"","date":"2023-08-14","externalUrl":null,"permalink":"/tags/markdown/","section":"Tags","summary":"","title":"MarkDown","type":"tags"},{"content":" A sub-title # Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nibh nisl, vulputate eu lacus vitae, maximus molestie libero. Vestibulum laoreet, odio et sollicitudin sollicitudin, quam ligula tempus urna, sed sagittis eros eros ac felis. In tristique tortor vitae lacinia commodo. Mauris venenatis ultrices purus nec fermentum. Nunc sit amet aliquet metus. Morbi nisl felis, gravida ac consequat vitae, blandit eu libero. Curabitur porta est in dui elementum porttitor. Maecenas fermentum, tortor ac feugiat fringilla, orci sem sagittis massa, a congue risus ipsum vel massa. Aliquam sit amet nunc vulputate, facilisis neque in, faucibus nisl.\n","date":"2023-08-14","externalUrl":null,"permalink":"/posts/myfirstpost/","section":"存档","summary":"This is my first post on my site","title":"My first post","type":"posts"},{"content":"关于博主\n现工作地：江苏\n职业：学生\n1956276745@qq.com\n若有正经事儿需要联系，也可以发邮件给我，地址如上所示。\n不想发邮件？您也可以通过Telegram找到我，请点击这里。\n免责声明\n本博客仅代表个人观点，与本人过去、现在以及将来所供职的公司及其他任何人无关。如无特别注明，本站所有内容均为原创。\n版权声明\n本博客所有文章，除特别声明外，均遵循 Creative Commons BY-NC-ND 4.0许可协议\n关于友情链接\n本站不交换链接。\n","date":"2023-08-14","externalUrl":null,"permalink":"/authors/","section":"这里是 泡饭25 的网站! 👻","summary":"This is my first post on my site","title":"paofan25","type":"page"},{"content":"","date":"2023-08-14","externalUrl":null,"permalink":"/tags/space/","section":"Tags","summary":"","title":"Space","type":"tags"},{"content":"我的一些文章\n","date":"2023-08-14","externalUrl":null,"permalink":"/posts/","section":"存档","summary":"This is my first post on my site","title":"存档","type":"posts"},{"content":"这里是网站的使用文档\n","date":"2023-08-14","externalUrl":null,"permalink":"/docs/","section":"使用文档","summary":"This is my first post on my site","title":"使用文档","type":"docs"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/%E7%AE%97%E6%B3%95/","section":"Tags","summary":"","title":"算法","type":"tags"},{"content":" 对称差计算器，支持两个及以上的数组 # // 对称差计算器，支持两个及以上的数组 function sym(...a) { let args = [] while(a.length!=1) { let c = symmetricDifference(a[0],a[1]) a.shift() a[0]=c } console.log(a); const uniqueArray = [...new Set(a[0])]; args=uniqueArray console.log(args); return args; } // 计算两个数组的对称差 function symmetricDifference(arr1, arr2) { let diff = []; for (let i = 0; i \u0026lt; arr1.length; i++) { if (!arr2.includes(arr1[i])) { diff.push(arr1[i]); } } for (let i = 0; i \u0026lt; arr2.length; i++) { if (!arr1.includes(arr2[i])) { diff.push(arr2[i]); } } return diff; } sym([1, 2, 3], [5, 2, 1, 4],[1,2,5]); ","externalUrl":null,"permalink":"/posts/okashi/","section":"存档","summary":"我的一些算法","title":"算法","type":"posts"}]